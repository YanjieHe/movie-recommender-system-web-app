{"version":3,"sources":["Movie.js","App.js","serviceWorker.js","index.js"],"names":["Movie","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","id","recommend","recommendThisMovie","bind","assertThisInitialized","react_default","a","createElement","class","style","max-width","movie_names","title","genres","join","onClick","alt","src","summaries","React","Component","App","myClick","moveBack","index","Math","floor","random","keys","length","imdb_id","movies","push","concat","neighbours","state","movie_list","record","setState","pop","className","cellpadding","render","type","-webkit-column-gap","-moz-column-gap","column-gap","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54031fdd.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport summaries from './summaries.json'\nimport movie_names from './movie_names.json'\n\nimport './App.css'\nimport './bootstrap.min.css'\n\nclass Movie extends React.Component {\n    constructor(props) {\n        super(props)\n        this.id = props.id\n        this.recommend = props.recommend\n        this.recommendThisMovie = this.recommendThisMovie.bind(this)\n    }\n\n    recommendThisMovie() {\n        this.recommend(this.id)\n    }\n\n    render() {\n        return (\n            <div class=\"card mb-3\" style={{\"max-width\": \"15rem\"}}>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{movie_names[this.id].title}</h5>\n                    <h6 class=\"card-subtitle text-muted\">genres: {movie_names[this.id].genres.join(\", \")}</h6>\n                </div>\n                <img onClick={this.recommendThisMovie}\n                     alt={movie_names[this.id].title + \" Poster\"} title={movie_names[this.id].title + \" Poster\"}\n                     src={\"https://raw.githubusercontent.com/YanjieHe/movie-recommender-system-web-app/master/src/images/\" + this.id + \".jpg\"}/>\n                <div class=\"card-body\">\n                    <p class=\"card-text\">{summaries[this.id]}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Movie;","import React, {Component} from 'react';\nimport summaries from './summaries.json'\nimport movie_names from './movie_names.json'\nimport neighbours from './neighbours.json'\nimport './App.css'\nimport Movie from \"./Movie.js\"\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.recommend = this.recommend.bind(this)\n        this.myClick = this.myClick.bind(this)\n        this.moveBack = this.moveBack.bind(this)\n        var index = Math.floor(Math.random() * Object.keys(movie_names).length)\n        var movies_id = Object.keys(movie_names)\n        var imdb_id = movies_id[index]\n        var movies = []\n        movies.push(imdb_id)\n        movies = movies.concat(neighbours[imdb_id])\n        this.state = {movie_list: movies, record: [imdb_id]}\n    }\n\n    myClick() {\n        var index = Math.floor(Math.random() * Object.keys(movie_names).length)\n        var movies_id = Object.keys(movie_names)\n        var imdb_id = movies_id[index]\n        this.recommend(imdb_id)\n    }\n\n    recommend(imdb_id) {\n        var movies = []\n        movies.push(imdb_id)\n        movies = movies.concat(neighbours[imdb_id])\n        this.state.record.push(imdb_id)\n        this.setState({movie_list: movies, record: this.state.record})\n    }\n\n    moveBack() {\n        if (this.state.record.length > 1) {\n            var imdb_id = this.state.record[this.state.record.length - 2]\n            this.state.record.pop()\n            this.state.record.pop()\n            this.recommend(imdb_id)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <br/>\n                <h3> A Movie Recommender System </h3>\n                <hr className=\"my-4\"/>\n                <table cellpadding=\"10px\">\n                    <tbody>\n                    <tr>\n                        <td>\n                            {new Movie({id: this.state.movie_list[0], recommend: this.recommend}).render()}\n                        </td>\n                        <td>\n                            <div className=\"col-lg-4\">\n                                <div className=\"bs-component\">\n                                    <h3> A Brief Introduction </h3>\n                                    <p>Welcome! The website you are browsing is a content-based movie recommender\n                                        system.</p>\n                                    <p>\n                                        Usually, a movie recommender system recommends films based on user ratings.\n                                        However, I built a recommender system based solely on the content of movies.\n                                        Namely, I solved the cold-start problem by utilizing the data collected from the\n                                        movies themselves.</p>\n                                    <p>To make accurate and surprising recommendations, I extracted information from\n                                        movie trailers used methods in computer vision and audio analysis. And also, I\n                                        integrate centrality features of movies by applying social network\n                                        analysis.</p>\n                                    <p>\n                                        Enjoy!\n                                    </p>\n\n                                    <p> Best,<br/>\n                                        Yanjie He</p>\n\n                                    <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\"\n                                            onClick={this.myClick}>\n                                        Randomly recommend me a movie!\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\"\n                                            onClick={this.moveBack}>\n                                        Return to the previous movie\n                                    </button>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <br/>\n                <h3> Similar Movies </h3>\n                <hr className=\"my-4\"/>\n                <section>\n                    <div\n                        className=\"row\"\n                        style={\n                            {\n                                \"-webkit-column-gap\":\n                                    \"15px\", /* Chrome, Safari, Opera */\n                                \"-moz-column-gap\":\n                                    \"15px\", /* Firefox */\n                                \"column-gap\":\n                                    \"15px\"\n                            }\n                        }>\n                        {\n                            new Movie({id: this.state.movie_list[1], recommend: this.recommend}).render()\n                        }\n\n                        {\n                            new Movie({id: this.state.movie_list[2], recommend: this.recommend}).render()\n                        }\n\n                        {\n                            new Movie({id: this.state.movie_list[3], recommend: this.recommend}).render()\n                        }\n\n                        {\n                            new Movie({id: this.state.movie_list[4], recommend: this.recommend}).render()\n                        }\n\n                        {\n                            new Movie({id: this.state.movie_list[5], recommend: this.recommend}).render()\n                        }\n                    </div>\n                    <div\n                        className=\"row\"\n                        style={\n                            {\n                                \"-webkit-column-gap\":\n                                    \"10px\", /* Chrome, Safari, Opera */\n                                \"-moz-column-gap\":\n                                    \"10px\", /* Firefox */\n                                \"column-gap\":\n                                    \"10px\"\n                            }\n                        }>\n                        {\n                            new Movie({id: this.state.movie_list[6], recommend: this.recommend}).render()\n                        }\n\n                        {\n                            new Movie({id: this.state.movie_list[7], recommend: this.recommend}).render()\n                        }\n\n                        {\n                            new Movie({id: this.state.movie_list[8], recommend: this.recommend}).render()\n                        }\n\n                        {\n                            new Movie({id: this.state.movie_list[9], recommend: this.recommend}).render()\n                        }\n\n                        {\n                            new Movie({id: this.state.movie_list[10], recommend: this.recommend}).render()\n                        }\n                    </div>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default App\n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}